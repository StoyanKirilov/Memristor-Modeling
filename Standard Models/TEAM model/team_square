% GNU Octave model
% TEAM memristor model - analysis and numerical solution
% using finite-differences method
% at sinusoidal mode
%
clear % clear the memory
clc
%
% analysis in time domain
tmin=0; % starting time, [s]
tmax=0.1; % stopping time, [s]
% sampling in time domain
N=1e5; % number of samples
deltat=(tmax-tmin)/N; % time step, [s]
t=tmin:deltat:tmax; % time variable, [s]
% voltage signal generation
vm=0.1; % amplitude, [V]
f=100; % frequency,[Hz]
omega=2*pi*f; % angular frequency, [rad/s]
psiv=0; % initial phase, [Deg]
pkg load signal
v=vm*square(omega*t+deg2rad(psiv)); % voltage signal, [V]
% memristor model parameters
ron=50; % ON-state resistance, [Ohms]
roff=1e3; % OFF-state resistance, [Ohms]
x0=0.05; % state variable - initial value
% params
ion=8.9e-6;
ioff=115e-6;
koff=4.13e-33;
kon=4.13e-33;
alfaoff=25;
alfaon=25;
xon=0.1;
xoff=0.001;
lamda=log(roff/ron)
wc=107e-12;
aon=1.8e-6;
aoff=1.2e-6;
%
% forward or reverse biasing
% eta=1 for forward biasing and eta=-1 for reverse biasing
eta=1; % polarity parameter
% simulation
% state variable - expression according to the
% state differential equation: dx/dt = k*i*f(x)
% f(x)=x*(1-x) - Strukov-Williams window function
% i=v/(ron*x+roff*(1-x)) - memristor current
% numerical solution by finite-differences method
% n - index variable
tic
for n=1; % initial condition for t=0
  x(n)=x0;
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
end
for n=2:1:N+1; % recursion
  if ii(n-1)>=ioff;
  x(n)=x(n-1)+eta*deltat*koff*((ii(n-1)/ioff)-1)^alfaoff*...
  (exp(-exp((x(n-1)-aoff)/wc)));
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
elseif ii(n-1)<=ion;
  x(n)=x(n-1)+eta*deltat*kon*((ii(n-1)/ion)-1)^alfaon*...
  (exp(-exp((x(n-1)-aon)/(-wc))));
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
else x(n)=x(n-1);
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
  end
end
toc
% memristor accumulated charge [C, or A*s]
% flux linkage, [Wb]
for n=1;
  flux(n)=0;
end
for n=2:1:N+1;
  flux(n)=flux(n-1)+deltat*v(n-1);
end
% figures
figure(1)
plot(t,v,t,x,'r')
xlabel('Time variable, s')
ylabel('Voltage, State')
title('time diagrams of v and x')
grid
legend('Voltage','State variable')
figure(2)
plot(v,ii)
xlabel('Voltage, V')
ylabel('Current, A')
title('Current-voltage relationship')
grid
figure(3)
plot(flux,x)
xlabel('Flux linkage, Wb')
ylabel('State variable')
title('State-flux relation')
grid
%
% For citation:
%
% 1. Kvatinsky, E. G. Friedman, A. Kolodny and U. C. Weiser, "TEAM: ThrEshold
% Adaptive Memristor Model," in IEEE Transactions on Circuits and Systems I:
% Regular Papers, vol. 60, no. 1, pp. 211-221, Jan. 2013, doi: 10.1109/TCSI.2012.2215714.
%
% 2. Strukov, D.B., Snider, G.S., Stewart, D.R. and Williams, R.S.,
% 2008. The missing memristor found. Nature, vol. 453(7191), pp.80-83.
%
% 3. John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2023).
% GNU Octave version 8.2.0 manual: a high-level interactive language for
  % numerical computations. URL https://www.gnu.org/software/octave/doc/v8.2.0/
%
% 4. Nagar, S.. “Introduction to Octave,” Apress, Berkeley, CA, 2018,
% https://doi.org/10.1007/978-1-4842-3201-9_1, ISBN 978-1-4842-3201-9, pp. 209.
%
% 5. Chapra, S.C., Canale, R.P., “Numerical Methods for Engineers,”
% McGraw-Hill Education, USA, New York, 2016, ISBN 978–0–07–339792–4, pp. 970.
