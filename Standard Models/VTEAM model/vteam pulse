# GNU Octave model
# VTEAM memristor model - analysis and numerical solution
# using finite-differences method
# at impulse mode
#
clear # clear the memory
clc
#
# analysis in time domain
tmin=0; # starting time, [s]
tmax=1; # stopping time, [s]
# sampling in time domain
N=1e5; # number of samples
deltat=(tmax-tmin)/N; # time step, [s]
t=tmin:deltat:tmax; # time variable, [s]
# voltage signal generation
vm=1; # amplitude, [V]
f=50; # frequency,[Hz]
omega=2*pi*f; # angular frequency, [rad/s]
psiv=0; # initial phase, [Deg]
pkg load signal
v=vm*square(omega*t+deg2rad(psiv)); # voltage signal, [V]
# memristor model parameters
ron=100; # ON-state resistance, [Ohms]
roff=2.5e3; # OFF-state resistance, [Ohms]
x0=0.2; # state variable - initial value
# params
von=-0.53;
voff=0.5;
koff=4.03e-8;
kon=-80;
alfaoff=25;
alfaon=25;
D=10e-9;
xon=0.1;
xoff=0.001;
won=0;
woff=10;
lamda=log(roff/ron)
wc=107e-12;
aon=3;
aoff=1;
#
# forward or reverse biasing
# eta=1 for forward biasing and eta=-1 for reverse biasing
eta=1; # polarity parameter
# simulation
# state variable - expression according to the
# state differential equation: dx/dt = k*i*f(x)
# f(x)=x*(1-x) - Strukov-Williams window function
# i=v/(ron*x+roff*(1-x)) - memristor current
# numerical solution by finite-differences method
# n - index variable
tic
for n=1; # initial condition for t=0
  x(n)=x0;
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
end
for n=2:1:N+1; # recursion
  if v(n)>=voff;
  x(n)=x(n-1)+eta*deltat*koff*((v(n-1)/voff)-1)^alfaoff*...
  (exp(-exp((x(n-1)-aoff)/wc)));
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
elseif v(n)<=von;
  x(n)=x(n-1)+eta*deltat*kon*((v(n-1)/von)-1)^alfaon*...
  (exp(-exp((x(n-1)-aon)/(-wc))));
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
else x(n)=x(n-1);
  ii(n)=v(n)/(ron+(((roff-ron)/(xoff-xon))*(x(n)-xon)));
  end
end
toc
# memristor accumulated charge [C, or A*s]
# flux linkage, [Wb]
for n=1;
  flux(n)=0;
end
for n=2:1:N+1;
  flux(n)=flux(n-1)+deltat*v(n-1);
end
# figures
figure(1)
plot(t,v,t,x,'r')
xlabel('Time variable, s')
ylabel('Voltage, State')
title('time diagrams of v and x')
grid
legend('Voltage','State variable')
figure(2)
plot(v,ii)
xlabel('Voltage, V')
ylabel('Current, A')
title('Current-voltage relationship')
grid
figure(3)
plot(flux,x)
xlabel('Flux linkage, Wb')
ylabel('State variable')
title('State-flux relation')
grid
#
# For citation:
#
# 1. Kvatinsky, S., Ramadan, M., Friedman, E.G. and Kolodny, A., 2015. VTEAM: A general
# model for voltage-controlled memristors. IEEE Transactions on Circuits and
# Systems II: Express Briefs, 62(8), pp.786-790.
#
# 2. Kvatinsky, E. G. Friedman, A. Kolodny and U. C. Weiser, "TEAM: ThrEshold
# Adaptive Memristor Model," in IEEE Transactions on Circuits and Systems I:
# Regular Papers, vol. 60, no. 1, pp. 211-221, Jan. 2013, doi: 10.1109/TCSI.2012.2215714.
#
# 3. Strukov, D.B., Snider, G.S., Stewart, D.R. and Williams, R.S.,
# 2008. The missing memristor found. Nature, vol. 453(7191), pp.80-83.
#
# 4. John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2023).
# GNU Octave version 8.2.0 manual: a high-level interactive language for
  # numerical computations. URL https://www.gnu.org/software/octave/doc/v8.2.0/
#
# 5. Nagar, S.. “Introduction to Octave,” Apress, Berkeley, CA, 2018,
# https://doi.org/10.1007/978-1-4842-3201-9_1, ISBN 978-1-4842-3201-9, pp. 209.
#
# 6. Chapra, S.C., Canale, R.P., “Numerical Methods for Engineers,”
# McGraw-Hill Education, USA, New York, 2016, ISBN 978–0–07–339792–4, pp. 970.
