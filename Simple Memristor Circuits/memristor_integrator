# memristor-based integrator
# memristor integrator with a DC reading current
# source and output capacitor
# using SW memristor model
# with activation threshold
clear
clc
# circuit parameters
c=10e-12; # output capacitance value
jj=5e-6; # DC reading current
# signal parameters
f=50; # input signal frequency
vm=1.2; # input signal amplitude
psiv=0; # input signal initial phase
omega=2*pi*f; # input signal circular frequency
N=1e6; # number of samples
tmin=0; # start time
tmax=4*(1/f); # stop time
deltat=(tmax-tmin)/N; # time step
t=tmin:deltat:tmax; # time variable
pkg load signal
vin=vm*square(omega*t+deg2rad(psiv)); # input signal
# additional parameters for plotting
t1=tmin-0.1*(tmax-tmin);
t2=tmax+0.1*(tmax-tmin);
v1=min(vin)-0.1*(max(vin)-min(vin));
v2=max(vin)+0.1*(max(vin)-min(vin));
# memristor model parameters
ron=100; #on-state resistance
roff=16000; # off-state resistance
x0=0.5; # initial value of the state variable
k=4e5; # physical constant
vthr=0.2; # activation threshold
stpp=(sign(abs(vin)-vthr)+1)/2; # Heaviside step function
# state variable
for n=1;
  x(n)=x0;
  vout(n)=jj*(ron*x(n)+roff*(1-x(n))); # idealized output signal
  uc(n)=vout(n); # voltage across the output capacitor
end
for n=2:1:N+1;
  if mod(n-1,2)==0; # the memristor is connected to the input signal (writing information)
  x(n)=x(n-1)+deltat*k*(vin(n-1)/(ron*x(n-1)+roff*(1-x(n-1))))*(x(n-1)*(1-x(n-1)))*stpp(n-1);
  vout(n)=vout(n-1); # idealized output signal
  uc(n)=uc(n-1); # voltage across the capacitor
else x(n)=x(n-1)+deltat*k*jj*((x(n-1)*(1-x(n-1))))*stpp(n-1); # reading the stored info
    vout(n)=jj*((ron*x(n-1)+roff*(1-x(n-1)))); # idealized output voltage
    uc(n)=uc(n-1)+deltat*((jj*(ron*x(n-1)+roff*(1-x(n-1)))-uc(n-1))/(((ron*x(n-1)+roff*(1-x(n-1))))*c));
    # voltage across the capacitor
  end
end
M=ron*x+roff*(1-x); # memristance
vout=vout*100; # output signal after amplification
uc=uc*100; # voltage across the capacitor after amplification
# plotting
figure(1)
subplot(3,1,1)
plot(t,vin);
axis([t1 t2 v1 v2])
xlabel('Time, [s]')
ylabel('vin')
title('Input voltage diagram')
grid
legend('Input signal')
subplot(3,1,2)
plot(t,vout)
xlabel('Time, [s]')
ylabel('vout')
title('Output voltage diagram')
grid
legend('Input signal')
subplot(3,1,3)
plot(t,uc)
xlabel('Time, [s]')
ylabel('vc')
title('Voltage across capacitor')
grid
legend('Voltage across capacitor')
#
figure(2)
subplot(3,1,1)
plot(t,vin)
axis([t1 t2 v1 v2])
xlabel('Time, [s]')
ylabel('vin')
title('Input voltage diagram')
grid
legend('Input signal')
subplot(3,1,2)
plot(t,x)
xlabel('Time, [s]')
ylabel('state')
title('state diagram')
grid
legend('state variable')
subplot(3,1,3)
plot(t,M)
xlabel('Time, [s]')
ylabel('M')
title('Memristance diagram')
grid
legend('Memristance')
#
# For citation:
# 1. Mladenov V., Kirilov S., A Memristor Model with
# a Modified Window Function and Activation Thresholds, IEEE
# International Symposium on Circuits and Systems (ISCAS), Florence,
# Italy, 27-30 May 2018, pp. 1-5, doi: 10.1109/ISCAS.2018.8351429.
#
# 2. L. Chua, "Memristor-The missing circuit element," in IEEE
# Transactions on Circuit Theory, vol. 18, no. 5, pp. 507-519,
# September 1971, doi: 10.1109/TCT.1971.1083337.
#
# 3. Strukov, D.B., Snider, G.S., Stewart, D.R. and Williams, R.S.,
# 2008. The missing memristor found. Nature, vol. 453(7191), pp.80-83.
# 3. John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2023).
# GNU Octave version 8.2.0 manual: a high-level interactive language for
  # numerical computations. URL https://www.gnu.org/software/octave/doc/v8.2.0/
#
# 4. Nagar, S.. “Introduction to Octave,” Apress, Berkeley, CA, 2018,
# https://doi.org/10.1007/978-1-4842-3201-9_1, ISBN 978-1-4842-3201-9, pp. 209.
#
# 5. Chapra, S.C., Canale, R.P., “Numerical Methods for Engineers,”
# McGraw-Hill Education, USA, New York, 2016, ISBN 978–0–07–339792–4, pp. 970.
