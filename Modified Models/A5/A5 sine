# GNU Octave model
# Modified memristor model A5 - numerical solution
# using finite-differences method
# at sinusoidal mode
#
clear # clear the memory
clc # clear screen
#
# analysis in time domain
tmin=0; # starting time, [s]
tmax=1; # stopping time, [s]
# sampling in time domain
N=1e5; # number of samples
deltat=(tmax-tmin)/N; # time step, [s]
t=tmin:deltat:tmax; # time variable, [s]
# voltage signal generation
vm=0.6; # amplitude, [V]
f=20; # frequency,[Hz]
omega=2*pi*f; # angular frequency, [rad/s]
psiv=-60; # initial phase, [Deg]
v=vm*sin(omega*t+deg2rad(psiv)); # voltage signal, [V]
# memristor model parameters
x0=0.2; # state variable - initial value
aa=8;
b=2;
pp=aa./(b+abs(v)); # positive integer exponent
alfa=1.2;
beta=100e-6;
gama=1.5;
hi=100e-6;
nn=3;
m=3;
a=1000;
vthr=0.25
# Heaviside step function stp
stpp=(sign(-v)+1)/2;
#
# forward or reverse biasing
# eta=1 for forward biasing and eta=-1 for reverse biasing
eta=1; # polarity parameter
# simulation
# state variable - expression according to the
# state differential equation: dx/dt = a*(v^m)*f(x)
# f(x)=1-(x-stp(-v))^(2*p) - modified window function
# ii=beta*(x^n)*sinh(alfa*v)+hi*(exp(gama*v)-1) - memristor current
# numerical solution by finite-differences method
# n - index variable
tic
for n=1; # initial condition for t=0
  x(n)=x0;
end
for n=2:1:N+1; # recursion
  if abs(v(n-1))>=vthr;
  x(n)=x(n-1)+eta*deltat*a*(v(n-1)^m)*...
  (((1-(x(n-1)-stpp(n-1))^(2*pp(n-1)))+(1-(2*x(n-1)-1)^(2*pp(n-1))))/2);
else x(n)=x(n-1);
  end
end
toc
# flux linkage, [Wb]
for n=1;
  flux(n)=0;
end
for n=2:1:N+1;
  flux(n)=flux(n-1)+deltat*v(n-1);
end
# analytical solution of the state differential equation
# not always possible in closed-form solution
# window function, proposed by Biolek
fM=(((1-(x-stpp).^(2*pp))+(1-(2*x-1).^(2*pp)))/2);;
# memristor current imem, [A]
imem=beta*(x.^nn).*sinh(alfa*v)+hi*(exp(gama*v)-1); # numerical
# differential resistance rdiff=dv/di, [Ohm]
for n=1:N;
  rdiff(n)=(v(n+1)-v(n))/(imem(n+1)-imem(n));
end
#
nprim=1:1:N; # reduced index variable
tprim=tmin:deltat:(tmax-deltat); # reduced time vaiable, [s]
xmaxprim=length(x)-1; # reduced state variable size
xprim=x(:,1:xmaxprim); # reduced state variable
for n=1:N; # time derivative of state variable
  dxdt(n)=(x(n+1)-x(n))/deltat;
end
# differential memductance wdiff=dimem/dv, [S]
for n=1:N;
  wdiff(n)=(imem(n+1)-imem(n))/(v(n+1)-v(n));
end
# memristor power dissipated, [W]
p=v.*imem; # numerical
# spectral analysis of memristor current
fourier=fft(imem); # fast Fourier transformation
mid=round(length(fourier)/2);
half=fourier(1:mid);
spectar=abs(half);
spectar=spectar/mid;
ff=linspace(0,1000,mid);
#
# figures
figure(1)
plot(t,v,t,x,'r')
xlabel('Time variable, s')
ylabel('Voltage, State')
title('time diagrams of v and x')
grid
legend('Voltage','State variable x')
figure(2)
plot(t,v,t,imem*1e3,'r')
xlabel('Time variable, s')
ylabel('Voltage, Current')
title('Time diagrams of v and imem')
grid
legend('Voltage','Current')
figure(3)
plot(v,imem)
xlabel('Voltage, V')
ylabel('Current, A')
title('Current-voltage relationship')
grid
legend('Numerical i-v relation')
figure(4)
plot(flux,x)
xlabel('Flux linkage, Wb')
ylabel('State variable')
title('State-flux relation')
grid
legend('Numerical state-flux relation')
figure(6)
plot(tprim,rdiff)
xlabel('Time, s')
ylabel('Differential resistance, Ohms')
title('Time diagram of rdiff')
grid
legend('numerical')
figure(6)
plot(tprim,rdiff)
xlabel('Time, s')
ylabel('Differential resistance, Ohms')
title('Time diagram of rdiff')
grid
legend('numerical')
figure(7)
plot(tprim,wdiff)
xlabel('Time, s')
ylabel('Differential memductance, Ohms')
title('Time diagram of wdiff')
grid
legend('numerical')
figure(8)
plot(t,v,t,p*1e3,'r')
xlabel('Time, s')
ylabel('Voltage and Power, V, mW')
title('Time diagram of v and p')
grid
legend('voltage','numerical power')
figure(9)
plot(x,fM)
xlabel('State variable x')
ylabel('Biolek Window function')
title('Biolek window')
grid
legend('Numerical window function')
figure(12)
plot(xprim,dxdt)
xlabel('State variable')
ylabel('Time derivative of x')
title('Phase portrait')
grid
legend('numerical')
figure(13)
plot(ff,spectar);
title('FFT Analysis');
xlabel('Frequency (Hz)');
ylabel('Amplitude');
grid
legend('numerical')
figure(14)
plot(t,x)
xlabel('Time, [s]')
ylabel('State variable')
title('Time diagram of x')
grid
legend('Numerical solution')
#
# For citation:
#
# 1. V. Mladenov, Analysis and Simulations of Hybrid Memory Scheme
# Based on Memristors, Electronics 2018, 7, 289;
# doi:10.3390/electronics7110289, httPS://www.mdpi.com/2079-9292/7/11/289.
#
# 2. L. Chua, "Memristor-The missing circuit element," in IEEE
# Transactions on Circuit Theory, vol. 18, no. 5, pp. 507-519,
# September 1971, doi: 10.1109/TCT.1971.1083337.
#
# 3. Strukov, D.B., Snider, G.S., Stewart, D.R. and Williams, R.S.,
# 2008. The missing memristor found. Nature, vol. 453(7191), pp.80-83.
#
# 4. F. Corinto and A. Ascoli, "A Boundary Condition-Based Approach
# to the Modeling of Memristor Nanostructures," in IEEE
# Transactions on Circuits and Systems I: Regular Papers,
# vol. 59, no. 11, pp. 2713-2726, Nov. 2012, doi: 10.1109/TCSI.2012.2190563.
#
# 5. John W. Eaton, David Bateman, Søren Hauberg, Rik Wehbring (2023).
# GNU Octave version 8.2.0 manual: a high-level interactive language for
  # numerical computations. URL https://www.gnu.org/software/octave/doc/v8.2.0/
#
# 6. Nagar, S.. “Introduction to Octave,” Apress, Berkeley, CA, 2018,
# https://doi.org/10.1007/978-1-4842-3201-9_1, ISBN 978-1-4842-3201-9, pp. 209.
#
# 7. Chapra, S.C., Canale, R.P., “Numerical Methods for Engineers,”
# McGraw-Hill Education, USA, New York, 2016, ISBN 978–0–07–339792–4, pp. 970.
